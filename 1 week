#fruit리스트에 과일들 개수 세기
''' #내가 짠 코드
fruit = ["사과", "사과", "바나나", "바나나", "딸기", "키위", "복숭아",
         "복숭아", "복숭아"]
num = {"apple":0, "banana":0, "strawberry":0, "kiwi": 0, "peach":0}
for i in fruit:
   if i =="사과":
       num["apple"] = num["apple"]  + 1
   elif i == "바나나":
       num["bananan"] = num["banana"] + 1
   elif i == "딸기":
       num["strawberry"] = num["strawberry"] + 1
   elif i == "키위":
       num["kiwi"] = num["kiwi"] + 1
   elif i == "복숭아":
       num["peach"] = num["peach"] + 1
print(num.values())
'''

'''
fruit = ["사과", "사과", "바나나", "바나나", "딸기", "키위", "복숭아",
         "복숭아", "복숭아"]
d = {}
for f in fruit: # 1) 딸기" 라는 key 가 d 라는 딕셔너리에 들어있어?
    if f in d: #
        d[f]= d[f] + 1
    else:
        d[f] = 1 # 2) 만약 "사과" 라는 애가 없으면 그걸 딕셔너리에 넣고 
                 #    벨류는 1로 만들어줘
print(d) #
'''
# 코드를 짜는 방법은 다양한 것 같고 아직 코드를 짜는 뇌구조를 갖추지 못한 것 같아요!

# 클래스 = 빵틀, 오브젝트 = 빵 (비유)
class Person:
    def __init__(self,name,age):
        self.name = name
        self.age = age
    def say_hello(self,age2):
        print("안녕! "+self.name+ "나는 ", self.name + age2+"살이야")

    def introduce(self):
        print("내 이름은 " + self.name + "그리고 나는 " + str(self.age)
              + "살이야")
'''
#상속
'''
******* 중요 *******
class Police(Person): # Police 와 Programmer 클래스를 만든다면 Police와
                      # Programmer 가 하는 일은 다르지만 둘 다 Person이
                      # 할 수 있는 일은 다 할 수 있어야 한다.
    def arrest(self, to_arrest):
        print("넌 체포됐다." + to_arrest)
class Programmer(Person):
    def program(self, to_program):
        print("다음엔 뭘 만들지? 아 이걸 만들어야겠다." + to_program)
        
sh = Person("승현", 20)
jenny = Police("제니",23)
michael = Programmer("마이클",23)
sh.introduce()
jenny.arrest()
'''
# 2023/10/02

n, m = map(int,input().split())
a = []
b = []
for i in range(n):
    list1 = list(map(int,input().split()))
    a.append(list1)
for j in range(n):
    list2 = list(map(int,input().split()))
    b.append(list2)
# c=[] 라는 리스트르 만들어서 c 리스트 각각의 행렬에 a b 를 더한 값을 넣고 나서 출력하고 싶었지만
# 2차원 리스트 선언은 기본 방식과 달랐다.
for t in range(n):
    for u in range(m):
        print(a[t][u] + b[t][u], end = " ") #각각의 행렬을 더하면서 값을 넣어주는 방법이 있는가 하면
    print("")

''' # c 라는 2차원 리스트를 선언해주고 덧셈을 c라는 리스트 안에 넣어주는 방법이 있다

c = [[0 for col in range(m)]for row in range(n)] # '2차원 리스트 선언해주는 방법'
for k in range(n):
    for l in range(m):
        c[k][l] = a[k][l] + b[k][l]
'''


