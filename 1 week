#fruit리스트에 과일들 개수 세기
''' #내가 짠 코드
fruit = ["사과", "사과", "바나나", "바나나", "딸기", "키위", "복숭아",
         "복숭아", "복숭아"]
num = {"apple":0, "banana":0, "strawberry":0, "kiwi": 0, "peach":0}
for i in fruit:
   if i =="사과":
       num["apple"] = num["apple"]  + 1
   elif i == "바나나":
       num["bananan"] = num["banana"] + 1
   elif i == "딸기":
       num["strawberry"] = num["strawberry"] + 1
   elif i == "키위":
       num["kiwi"] = num["kiwi"] + 1
   elif i == "복숭아":
       num["peach"] = num["peach"] + 1
print(num.values())
'''

'''
fruit = ["사과", "사과", "바나나", "바나나", "딸기", "키위", "복숭아",
         "복숭아", "복숭아"]
d = {}
for f in fruit: # 1) 딸기" 라는 key 가 d 라는 딕셔너리에 들어있어?
    if f in d: #
        d[f]= d[f] + 1
    else:
        d[f] = 1 # 2) 만약 "사과" 라는 애가 없으면 그걸 딕셔너리에 넣고 
                 #    벨류는 1로 만들어줘
print(d) #
'''
# 코드를 짜는 방법은 다양한 것 같고 아직 코드를 짜는 뇌구조를 갖추지 못한 것 같아요!

# 클래스 = 빵틀, 오브젝트 = 빵 (비유)
class Person:
    def __init__(self,name,age):
        self.name = name
        self.age = age
    def say_hello(self,age2):
        print("안녕! "+self.name+ "나는 ", self.name + age2+"살이야")

    def introduce(self):
        print("내 이름은 " + self.name + "그리고 나는 " + str(self.age)
              + "살이야")
'''
#상속
'''
******* 중요 *******
class Police(Person): # Police 와 Programmer 클래스를 만든다면 Police와
                      # Programmer 가 하는 일은 다르지만 둘 다 Person이
                      # 할 수 있는 일은 다 할 수 있어야 한다.
    def arrest(self, to_arrest):
        print("넌 체포됐다." + to_arrest)
class Programmer(Person):
    def program(self, to_program):
        print("다음엔 뭘 만들지? 아 이걸 만들어야겠다." + to_program)
        
sh = Person("승현", 20)
jenny = Police("제니",23)
michael = Programmer("마이클",23)
sh.introduce()
jenny.arrest()
'''
# 2023/10/02

n, m = map(int,input().split())
a = []
b = []
for i in range(n):
    list1 = list(map(int,input().split()))
    a.append(list1)
for j in range(n):
    list2 = list(map(int,input().split()))
    b.append(list2)
# c=[] 라는 리스트르 만들어서 c 리스트 각각의 행렬에 a b 를 더한 값을 넣고 나서 출력하고 싶었지만
# 2차원 리스트 선언은 기본 방식과 달랐다.
for t in range(n):
    for u in range(m):
        print(a[t][u] + b[t][u], end = " ") #각각의 행렬을 더하면서 값을 넣어주는 방법이 있는가 하면
    print("")

''' # c 라는 2차원 리스트를 선언해주고 덧셈을 c라는 리스트 안에 넣어주는 방법이 있다

c = [[0 for col in range(m)]for row in range(n)] # '2차원 리스트 선언해주는 방법'
for k in range(n):
    for l in range(m):
        c[k][l] = a[k][l] + b[k][l]
'''

# a = str(input())
# b = len(a)
# for i in range(b):
#     if (a[i].isupper()):
#         print(a[i].lower(),end = "")
#     else:
#         print(a[i].upper(),end = "")

# import sys
# a, b, c = list(map(int, sys.stdin.readline().split(",")))
# print(a,b,c)

# a = int(input())
# for i in range(1,10):
#     print(a, "*", i, "=", (a * i))
#     i += 1

# n = int(input())
# for i in range(1, n+1):
#     print(i)
#     i += 1

# a = str(input())
# b = len(a)
# print(b)

# k, q = 1, 1
# l, b, n = 2, 2, 2
# p = 8
# K, Q, L, B, N, P = map(int,input().split())
# print((k-K),(q-Q),(l-L),(b-B),(n-N), (p-P))

# chess = [*map(int, input().split())]
# c = [1, 1, 2, 2, 2, 8]
# a = []
# for i in range(6):
#     a.append(c[i]-chess[i])
# print(*a)

# 리스트 chess에 있는 *map
# *args = *arguments
# 인수 앞에 *를 붙여서 여러 개의 인자를 함수로 받고자 할 때 쓴다.
# Ex)
# def lastName_and_FirstName(*Names):
#     for name in Names:
#         print("%s %s" % (name[0],name[1:3]), end=' ')
#     print("\n")
# lastName_and_FirstName('이천수')
# lastName_and_FirstName('이천수','안정환')
# lastName_and_FirstName('이천수','안정환','황선홍')
# lastName_and_FirstName('이천수','안정환','황선홍','박지성')
#인수를 여러 개를 적어도 모두 적용이 된다.

''' # 4101
import sys
x = []
i = 0
while True:
    a, b= map(int, sys.stdin.readline().split())
    if (a==0 and b ==0):
        break
    if a > b:
        x.append("Yes")
    elif a <= b:
        x.append("No")
    i += 1
for t in range(i):
    print(x[t])
'''
# 9086
''' # 리스트 안에 입력값을 받아 놓을 생각이어서 리스트 안의 스트링의 첫 글자와 마지막 글자를 어떻게 출력할 지
    # 고민을 많이 한 것 같다.
a = int(input())
b = []
for i in range(0,a):
    b.append(str(input()))
for k in range(a):
    print(b[k][0]+b[k][-1])
'''

#5597
# x=[]
# for i in range(1,31):
#    x.append(i)
# 
# for l in range(28):
#     t = int(input())
#     x.remove(t)
# print(x[0])
# print(x[1])

#1085
# 왼쪽사각형에서 오른쪽사각형까지의 최소 거리는 x의 왼쪽, 오른쪽 y의 위, 아래 중 최소를 구하면
# 되는 문제 이기에 w-x, h-y, x, y 를 놓고 가장 작은 숫자를 출력.
import sys
x, y, w, h = map(int,sys.stdin.readline().split())
a = []
a.append(w-x)
a.append(h-y)
a.append(x)
a.append(y)
a.sort()
print(a[0])
[2023/10/05]

# import sys
# n, k = map(str,input().split())
# A = list(map(str,input().split()))
# print(A.count(str(k)))
# # count를 사용하려면 count()안을 string으로 넣어야 한다. int형은 불가함


# import sys
# num = int(input())
# time = list(map(int,sys.stdin.readline().split()))
# a = []
# b = []
# A = 0
# B = 0
# for i in range(len(time)):
#     a.append((time[i]//30 + 1)*10)
#     b.append((time[i]//60 + 1)*15)
# for t in range(len(time)):
#     A += a[t]
#     B += b[t]
# if A>B:
#     print("M",B)
# elif A < B:
#     print("Y",A)
# else:
#     print("Y M",A)
# 처음에는 time 리스트 안의 값을 다 더한 후에 30, 60으로 나눠서 값이 이상하게 나왔는데
# 각각 따로 구해야하는 걸 나중에 알았다.

